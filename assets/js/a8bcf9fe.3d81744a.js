"use strict";(self.webpackChunkrest_docs=self.webpackChunkrest_docs||[]).push([[790],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3960:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:1},i="Quick Start",s={unversionedId:"tutorials/start",id:"tutorials/start",title:"Quick Start",description:"Start Rest in Docker",source:"@site/docs/tutorials/start.md",sourceDirName:"tutorials",slug:"/tutorials/start",permalink:"/docs/tutorials/start",draft:!1,editUrl:"https://github.com/rest-go/rest-site/edit/main/docs/tutorials/start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/docs/category/tutorials"},next:{title:"Installation",permalink:"/docs/tutorials/installation"}},l={},c=[{value:"Start Rest in Docker",id:"start-rest-in-docker",level:2},{value:"Use API",id:"use-api",level:2},{value:"What&#39;s Next",id:"whats-next",level:2}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("h2",{id:"start-rest-in-docker"},"Start Rest in Docker"),(0,a.kt)("p",null,"run server and connect to an existing database"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# connect to postgres\ndocker run -p 3000:3000 restgo/rest -db.url "postgres://user:passwd@localhost:5432/db"\n\n# connect to sqlite file with volume\ndocker run -p 3000:3000 -v $(pwd):/data restgo/rest -db.url "sqlite:///data/my.db"\n')),(0,a.kt)("h2",{id:"use-api"},"Use API"),(0,a.kt)("p",null,"Assume there is a ",(0,a.kt)("inlineCode",{parentName:"p"},"todos")," table in the database with ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"title")," fields:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# Create a todo item\ncurl -XPOST "localhost:3000/todos" -d \'{"title": "setup api server", "done": false}\'\n\n# Read\ncurl -XGET "localhost:3000/todos/1"\n\n# Update\ncurl -XPUT "localhost:3000/todos/1" -d \'{"title": "setup api server", "done": true}\'\n\n# Delete\ncurl -XDELETE "localhost:3000/todos/1"\n')),(0,a.kt)("h2",{id:"whats-next"},"What's Next"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"check ",(0,a.kt)("a",{parentName:"li",href:"./installation"},"Installation")," page for more ways to install Rest."),(0,a.kt)("li",{parentName:"ul"},"check ",(0,a.kt)("a",{parentName:"li",href:"./configuration"},"Configuration")," page for how to configure Rest."),(0,a.kt)("li",{parentName:"ul"},"check ",(0,a.kt)("a",{parentName:"li",href:"../guides/api"},"API guide")," page for different API operations.")))}p.isMDXComponent=!0}}]);