"use strict";(self.webpackChunkrest_docs=self.webpackChunkrest_docs||[]).push([[314],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return r?a.createElement(g,i(i({ref:t},d),{},{components:r})):a.createElement(g,i({ref:t},d))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1585:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:1},i="Quick start",l={unversionedId:"getting-started/start",id:"getting-started/start",title:"Quick start",description:"Docker image",source:"@site/docs/getting-started/start.md",sourceDirName:"getting-started",slug:"/getting-started/start",permalink:"/docs/getting-started/start",draft:!1,editUrl:"https://github.com/rest-go/rest-site/edit/main/docs/getting-started/start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/category/getting-started"},next:{title:"Installation",permalink:"/docs/getting-started/installation"}},s={},c=[{value:"Docker image",id:"docker-image",level:2},{value:"Use API",id:"use-api",level:2},{value:"Create a todo item",id:"create-a-todo-item",level:4},{value:"Read",id:"read",level:4},{value:"Update",id:"update",level:4},{value:"Delete",id:"delete",level:4},{value:"What&#39;s Next",id:"whats-next",level:2}],d={toc:c};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"quick-start"},"Quick start"),(0,n.kt)("h2",{id:"docker-image"},"Docker image"),(0,n.kt)("p",null,"Run the server in Docker and connect to an existing database"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# connect to postgres\ndocker run -p 3000:3000 restgo/rest -db.url "postgres://user:passwd@localhost:5432/db"\n\n# connect to mysql\ndocker run -p 3000:3000 restgo/rest -db.url "mysql://user:passwd@tcp(127.0.0.1:3306)/db_name"\n\n# connect to sqlite file with volume\ndocker run -p 3000:3000 -v $(pwd):/data restgo/rest -db.url "sqlite:///data/my.db"\n')),(0,n.kt)("h2",{id:"use-api"},"Use API"),(0,n.kt)("p",null,"Assume there is a ",(0,n.kt)("inlineCode",{parentName:"p"},"todos")," table in the database with ",(0,n.kt)("inlineCode",{parentName:"p"},"id"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"done")," fields, the RESTFul CURD API is auto-generated for the table."),(0,n.kt)("h4",{id:"create-a-todo-item"},"Create a todo item"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl -XPOST "localhost:3000/todos" -d \'{"title": "setup api server", "done": false}\'\n')),(0,n.kt)("h4",{id:"read"},"Read"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl -XGET "localhost:3000/todos/1"\n')),(0,n.kt)("h4",{id:"update"},"Update"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl -XPUT "localhost:3000/todos/1" -d \'{"title": "setup api server", "done": true}\'\n')),(0,n.kt)("h4",{id:"delete"},"Delete"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'curl -XDELETE "localhost:3000/todos/1"\n')),(0,n.kt)("h2",{id:"whats-next"},"What's Next"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Check the ",(0,n.kt)("a",{parentName:"li",href:"./installation"},"Installation")," page for more ways to install Rest."),(0,n.kt)("li",{parentName:"ul"},"Check the ",(0,n.kt)("a",{parentName:"li",href:"./configuration"},"Configuration")," page for how to configure Rest."),(0,n.kt)("li",{parentName:"ul"},"Check the ",(0,n.kt)("a",{parentName:"li",href:"../guides/api"},"API guide")," page for detail API usage.")))}p.isMDXComponent=!0}}]);